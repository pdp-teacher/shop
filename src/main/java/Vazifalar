1. Race contition va uning yechimi haqida yozing.  
2. user package da shunday user service yaratingki. uni ichida 1 ta method bo'lsin. u method eng ko'p pul sarflagan userlarni opib bersin.
3. BaseEntity ni yarating. Repositorylarni yarating. repositoryda hamma userlarni serialization orqali faylga saqlang. va fayldan o'qib oling.





 1- SAVOLGA JAVOB;

 Race condition bu threadlar bir birini qulflab qoygan payt yordamga keladi misol lock lar

 Thread lar hammasi birga ishlaydi misol uchun counter++ qilib qoysak threadlar bir birini kormay
 ishagani uchun bizda hatolik kuzatiladi

 Lock lock = new ReentrantLock();

 public void increment() {
     lock.lock();
     try {
     } finally {
         lock.unlock();
     }
 }
 bular ham race condition bo`ladi

 bundan ham oson yoli metodni synchronized qilish kerak.Bizda yana race condition lar dan Atomic lar
 ham ishlatishimiz mumkin AtomiclarInteger AtomicDouble  Atomic lar ni ozini metodlari bor
 biz uni qolab tezroq natijaga erishishimiz mumkin.

         AtomicInteger atomicInteger =new AtomicInteger(0);


    public synchronized int increment() {
       /*  try {
             lock.lock();
             couter++;
         } finally {
             lock.unlock();
         }*/
         couter++;
         return couter;
     }
     bu metod thread lar ni bir birini qulflab qoyishga yol qoymaydi.

